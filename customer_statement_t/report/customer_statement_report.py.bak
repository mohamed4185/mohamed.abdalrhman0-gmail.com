
from odoo import api, models
from dateutil.relativedelta import relativedelta
import datetime
import logging

_logger = logging.getLogger(__name__)


class ReportProductSale(models.AbstractModel):
    _name = "report.customer_statement_T.customer_statement_report_t"

    @api.model
    def _get_report_values(self, docids, data=None):
        date_from = data["form"]["date_from"]
        date_to = data["form"]["date_to"]
        customer = data["form"]["customer"]

        total_sale = 0.0
        period_value = ""
        domain = [("type", "=", "out_invoice")]
        if date_from:
            domain.append(("date_invoice", ">=", date_from))
        if date_to:
            domain.append(("date_invoice", "<=", date_to))
        if customer:
            domain.append(("partner_id", "=", customer))

        list = []
        order_line = []
        invoice_ids = self.env["account.invoice"].search(domain, order="origin asc")

        for inv in invoice_ids:
            if inv.state != "draft":
                date_so = ""

                sale_order = self.env["sale.order"].search([("name", "=", inv.origin)])
                if sale_order:
                    date_so = sale_order.date_order

                for line in inv.invoice_line_ids:

                    list.append(
                        {
                            "so_number": inv.origin,
                            "date_so": date_so,
                            "invoice_number": line.invoice_id.number,
                            "product_id": line.product_id.name,
                            "inv_name": line.invoice_id.name,
                            "date_in": line.invoice_id.date_invoice,
                            "partner": line.invoice_id.partner_id.name,
                            "quantity": line.quantity,
                            "price_unit": line.price_unit,
                            "total": line.price_total,
                            "note_invoice": line.note_invoice,
                           
                        }
                    )

        if len(list) != 0:
            return {
                "doc_ids": data["ids"],
                "doc_model": data["model"],
                "period": period_value,
                "date_from": date_from,
                "date_to": date_to,
                "sale_orders": list,
                "total_sale": total_sale,
                "customer_name": self.env["res.partner"].search([("id", "=", customer)]).name,
                "data_check": False,
                "name_report":'كشــف حســـاب عميل'
            }
        else:
            return {
                "doc_ids": data["ids"],
                "doc_model": data["model"],
                "period": period_value,
                "date_from": date_from,
                "date_to": date_to,
                "sale_orders": list,
                "total_sale": total_sale,
                "customer": self.env["res.partner"].search([("id", "=", customer)]).name,
                "data_check": True,
                "name_report":'كشــف حســـاب عميل'
            }

