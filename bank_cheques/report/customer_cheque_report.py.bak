################################################################################ -*- coding: utf-8 -*-

###############################################################################
#
#    Periodical Sales Report
#
#    Copyright (C) 2019 Aminia Technology
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

from odoo import api, models
from dateutil.relativedelta import relativedelta
import datetime
import logging
_logger = logging.getLogger(__name__)

class ReportProductSale(models.AbstractModel):
    _name = 'report.customer_cheques.customer_cheques_report'

    @api.model
    def _get_report_values(self, docids, data=None):
        date_from = data['form']['date_from']
        date_to = data['form']['date_to']
        customer=data['form']['customer']
         
        total_sale = 0.0
        period_value = ''
        domain=[]
        if date_from:
            domain.append(('check_date', '>=', date_from))
        if date_to  :
            domain.append(('check_date', '<=', date_to))
        if customer:
            domain.append(('investor_id', '=', customer))

         
        list = []
        order_line=[]
        cheques = self.env['check.management'].search(domain,order='check_date asc')
         
      
        for line in cheques:
                                 
                list.append({
                            'cheque_number':line.check_number,
                            'cheque_date': line.check_date,
                            'check_payment':line.check_payment,
                            'partner':line.investor_id.name,
                            'state':line.state,
                            'check_bank':line.check_bank.name,
                            'date_in':line.amount

                        })

         

        return {
            'doc_ids': data['ids'],
            'doc_model': data['model'],
            'period' : period_value,
            'date_from': date_from,
            'date_to': date_to,
            'sale_orders' : list,
            'total_sale' : total_sale,
        }